/*
 * Organizations API
 *
 * API for adding, retrieving, updating, and deleting members in a SignalFx  organization. <br> ## Overview Data coming in to SignalFx is associated with a single entity called an **organization** To access this data within an organization, users must be  members of the organization. Most SignalFx users belong to a single  organization, which they think of as their \"SignalFx account\". <br> All SignalFx users have user IDs that SignalFx assigns, which identifies the  them across organizations at SignalFx. The SignalFx users for an  organization also have a **member ID* that's specific to the organization. <br> To join an organization, SignalFx users need an invitation from an member that has administrative access to the organization. After users  join an organization, they can do the following for the organization:<br>   * Submit datapoints to their organization   * Use the SignalFx web UI to look at their organization's data   * Make requests with the SignalFx API to work with organization data  ## Authentication To authenticate with SignalFx, the following operations require a session token associated with a SignalFx user that has administrative privileges:<br>   * Retrieve metadata for the organization - **GET** `/organization`   * Create, update, or delete custom categories for an organization - **PATCH** `/organization/custom-categories`   * Invite a user to the organization - **POST** `/organization/member`   * Retrieve information about the organization's users - **GET** `/organization/member`   * Invite one or more users to the organization - **POST** `/organization/members`   * Update the administrative privileges of a user - **PUT** `/organization/member/{id}`   * Delete a user - **DELETE** `/organization/member/{id}`  The following operations can authenticate with either an org token or a session token:   * Get information for an organization member - **GET** `/organization/member/{id}`   * Get all custom categories for an organization - **GET** `/organization/custom-categories`
 *
 * API version: 3.2.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package organization

// The results of a GET for `/organization/member`. This is a JSON object that has two properties:<br>   * `results`: Array of member objects   * `count`: Number of member objects in the result set
type MemberSearchResults struct {
	// Array of members. Each element contains a single result for the query, in the form of a member object.
	Results []*Member `json:"results,omitempty"`
	// The number of member objects in the result set produced by the query.<br> **NOTE:** This number is not necessarily the same as the number of objects returned to you. If you specify an offset or limit for the query, the number of objects you receive is less than `count`.
	Count int32 `json:"count,omitempty"`
}
