/*
 * Dashboards API
 *
 * API for creating, retrieving, updating, and deleting dashboards and dashboard groups. <br> Dashboards are groups of charts. In a dashboard, all the charts that belong to the dashboard appear at the same time and follow the same filtering options. ## Dashboard layout The system lays out dashboards and the charts they contain with these dimensions: <br>   * The web UI reserves a 12x100 grid for each dashboard and assigns one or     more charts to specific locations within the grid.   * A chart associated with the dashboard can be any size from 1x1 to 12x3.   * If you assign overlapping dashboard locations for charts, the system     attempts to resize or reorganize the layout. This ensures that all     of the charts fit within the space alloted to the dashboard.  ## Dashboard access By default, all users in an organization can edit and delete dashboards and dashboard groups. If SignalFx has enabled the \"write permissions\" feature for your organization, you can limit editing or deleting of specific dashboards to specific individuals or teams, or both. Use this feature to prevent unauthorized or accidental modifications to dashboards and the charts they contain. ## Cloning dashboards Users who don't have permission to edit a dashboard can still clone it and modify the clone. ## View dashboards You can view dashboards you create using the API in the web UI by specifying their \"id\" property in a web UI URL, by following this syntax: <br> <code>https://app.signalfx.com/#/dashboard/&lt;DASHBOARD_ID&gt;</code> <br> Dashboards you create using the API also appear by name in the web UI catalog and in their dashboard group.
 *
 * API version: 3.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dashboard

// One of the charts associated with the dashboard. Specify the chart with the chart ID of an existing chart. The ID must be unique across the entire dashboard.
type DashboardChart struct {
	// ID of a existing chart object. Because charts can only belong to one dashboard, you can't associate this ID with any other dashboard.
	ChartId string `json:"chartId"`
	// 0-based index of the horizontal position of the chart in the dashboard display. The position represents the left-most edge of the chart. If you specify the same column and row value for more than one chart, the system tries to reconfigure the layout. If there's space, the dashboard retains the column value and spreads out over additional rows.<br> **Note:** The API doesn't validate the maximum value. However, if you specify a value greater than 11, the chart displays in the web UI as if 11 was specified. If that column is already occupied in the specified row, the system displays the chart in the first free row from the top in the specified column.
	Column int32 `json:"column"`
	// Number of rows this chart should span.<br> **Note:** The API doesn't validate the maximum value. However, if you specify a value greater than 3, the chart displays in the web UI as if 3 was specified. If the total height of all specified charts in a column is greater than 100, the system recalculates the layout to fit all the specified charts into the display of the dashboard.
	Height int32 `json:"height"`
	// 0-based index of the vertical position of the chart in the dashboard display. The position The value represents the top-most edge of the chart. the system moves charts upwards as needed to fill vertical gaps. If you specify the same column and row value for more than one chart, the system tries to reconfigure the layout. If there's space, the dashboard retains the column value and spreads out over additional rows. <br> The API doesn't validate the maximum value. However, if you specify a value greater than 99, the chart displays as if 0 were specified. If that row is already occupied, the system displays the in the first free row from the top in the specified column.
	Row int32 `json:"row"`
	// Number of columns this chart should span.<br> The API doesn't validate the maximum value. However, if you use a value greater than 12, the chart displays as if you specified 12. If the total width of all specified charts in a row is greater than 100, the system recalculates the layout so that all the specified charts fit into the display.
	Width int32 `json:"width"`
}
