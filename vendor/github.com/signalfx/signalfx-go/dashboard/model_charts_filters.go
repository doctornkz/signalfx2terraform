/*
 * Dashboards API
 *
 * API for creating, retrieving, updating, and deleting dashboards and dashboard groups. <br> Dashboards are groups of charts. In a dashboard, all the charts that belong to the dashboard appear at the same time and follow the same filtering options. ## Dashboard layout The system lays out dashboards and the charts they contain with these dimensions: <br>   * The web UI reserves a 12x100 grid for each dashboard and assigns one or     more charts to specific locations within the grid.   * A chart associated with the dashboard can be any size from 1x1 to 12x3.   * If you assign overlapping dashboard locations for charts, the system     attempts to resize or reorganize the layout. This ensures that all     of the charts fit within the space alloted to the dashboard.  ## Dashboard access By default, all users in an organization can edit and delete dashboards and dashboard groups. If SignalFx has enabled the \"write permissions\" feature for your organization, you can limit editing or deleting of specific dashboards to specific individuals or teams, or both. Use this feature to prevent unauthorized or accidental modifications to dashboards and the charts they contain. ## Cloning dashboards Users who don't have permission to edit a dashboard can still clone it and modify the clone. ## View dashboards You can view dashboards you create using the API in the web UI by specifying their \"id\" property in a web UI URL, by following this syntax: <br> <code>https://app.signalfx.com/#/dashboard/&lt;DASHBOARD_ID&gt;</code> <br> Dashboards you create using the API also appear by name in the web UI catalog and in their dashboard group.
 *
 * API version: 3.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dashboard

// Specifies the properties of filters to apply to the dashboard.<br> Filters give you fine-grained control over the data displayed in the charts in the dashboard. You can specify *ad hoc* filters or save them as variables for repeated use of the filter criteria. <br> You can also use filters to apply a custom time window to all of the charts in the dashboard.
type ChartsFilters struct {
	// List of filter objects to apply to the charts in the dashboard. Each object specifies a single filter for a default or user-defined dimension or custom property.
	Sources []*ChartsSingleFilter `json:"sources,omitempty"`
	Time    *ChartsFiltersTime    `json:"time,omitempty"`
	// Array of web UI-oriented filters that appear at the top of the dashboard. For each filter you can specify a name and a label for the dimension or custom property to filter against, a list of suggested comparison values to display in the web UI, and other properties that control the web UI display. To see a more detailed description of the options, see the property descriptions for the `ChartsWebUIFilter` model.
	Variables []*ChartsWebUiFilter `json:"variables,omitempty"`
}
